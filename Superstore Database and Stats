/* 
For this project, I created a database for a "Superstore" and answered questions about the data using SQL.
*/

CREATE TABLE superstore (
    item_id INTEGER PRIMARY KEY,
    item_name TEXT,
    category TEXT,
    price DECIMAL(10, 2),
    stock_quantity INTEGER,
    average_rating DECIMAL(3, 2)
);

INSERT INTO superstore (item_id, item_name, category, price, stock_quantity, average_rating)
VALUES
    (1, 'Stainless Steel Cookware Set', 'Kitchen Supplies', 89.99, 50, 4.6),
    (2, 'Memory Foam Mattress', 'Furnishings', 499.99, 30, 4.8),
    (3, 'Smart LED TV', 'Electronics', 549.00, 20, 4.5),
    (4, 'Robot Vacuum Cleaner', 'Appliances', 199.50, 40, 4.3),
    (5, 'Wireless Bluetooth Speaker', 'Electronics', 39.99, 60, 4.2),
    (6, 'Non-Stick Baking Set', 'Kitchen Supplies', 29.95, 80, 4.4),
    (7, 'Cotton Bedding Set', 'Furnishings', 89.00, 25, 4.7),
    (8, 'Smart Home Security Camera', 'Electronics', 79.95, 15, 4.1),
    (9, 'Air Purifier', 'Appliances', 129.50, 35, 4.6),
    (10, 'Premium Coffee Maker', 'Kitchen Supplies', 79.99, 50, 4.9),
    (11, 'Ergonomic Office Chair', 'Furnishings', 189.00, 20, 4.5),
    (12, 'Wireless Earbuds', 'Electronics', 49.99, 75, 4.3),
    (13, 'Slow Cooker', 'Appliances', 49.95, 30, 4.7),
    (14, 'Cutlery Set', 'Kitchen Supplies', 34.50, 40, 4.4),
    (15, 'Cozy Throw Blanket', 'Furnishings', 24.99, 100, 4.2);

--#1. Write your own SQL query that uses a SELECT statement to order the items by price.
SELECT item_name, price
FROM superstore
ORDER BY price DESC;

--#2. Write your own SQL query that will show a statistic about the item prices, like a sum, average, minimum, maximum, or count.
SELECT AVG(price) AS average_price
FROM superstore
WHERE category = 'Electronics';

--#3. Write your own SQL query that will show a statistic about the price for items in the category of "Kitchen Supplies". 
SELECT
    COUNT(item_id) AS item_count,
    AVG(price) AS average_price,
    MIN(price) AS minimum_price,
    MAX(price) AS maximum_price,
    SUM(price) AS total_price_value,
    SUM(stock_quantity) AS total_stock_quantity
FROM superstore
WHERE category = 'Kitchen Supplies';

--#4. Which items have a higher rating than the overall average rating of all the products in the superstore?
WITH AverageRating AS 
    (SELECT AVG(average_rating) AS overall_average_rating
     FROM superstore)
SELECT 
    s.item_id,
    s.item_name,
    s.category,
    s.price,
    s.stock_quantity,
    s.average_rating
FROM 
    superstore s
JOIN 
    AverageRating ar ON s.average_rating > ar.overall_average_rating;

